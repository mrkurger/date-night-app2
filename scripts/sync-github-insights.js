/**
 * GitHub Insights Sync
 *
 * This script pulls the latest GitHub insights from the repository.
 * It's designed to be run locally to sync the latest insights generated by GitHub Actions.
 */

import { execSync } from 'child_process';
import fs from 'fs/promises';
import path from 'path';

function syncGitHubInsights() {
  console.log('Syncing GitHub insights...');

  try {
    // Create insights directory if it doesn't exist
    const insightsDir = path.join(process.cwd(), 'docs', 'github-insights');
    if (!fs.existsSync(insightsDir)) {
      fs.mkdirSync(insightsDir, { recursive: true });
    }

    // Pull the latest changes from the repository
    console.log('Pulling latest changes from the repository...');
    execSync('git pull origin main', {
      stdio: 'inherit',
      cwd: process.cwd(),
    });

    // Check if insights report exists
    const insightsReportPath = path.join(insightsDir, 'insights-report.md');
    const aiAnalysisPath = path.join(insightsDir, 'ai-analysis-data.md');

    if (fs.existsSync(insightsReportPath)) {
      console.log('GitHub insights report found:');
      console.log(`- ${insightsReportPath}`);
    } else {
      console.log('GitHub insights report not found. It may not have been generated yet.');
      console.log(
        'The report will be generated by the GitHub Actions workflow and synced to your local repository.'
      );
    }

    if (fs.existsSync(aiAnalysisPath)) {
      console.log('AI analysis data found:');
      console.log(`- ${aiAnalysisPath}`);
    } else {
      console.log('AI analysis data not found. It may not have been generated yet.');
    }

    console.log('\nTo manually trigger the GitHub insights workflow:');
    console.log(
      '1. Go to https://github.com/mrkurger/date-night-app2/actions/workflows/sync-github-insights.yml'
    );
    console.log('2. Click "Run workflow" and select the branch to run on');
    console.log('3. Wait for the workflow to complete');
    console.log('4. Run this script again to pull the latest insights');
  } catch (error) {
    console.error('Error syncing GitHub insights:', error.message);
    process.exit(1);
  }
}

syncGitHubInsights();
