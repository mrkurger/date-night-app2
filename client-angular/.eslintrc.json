{
  "root": true,
  "ignorePatterns": [
    "projects/**/*",
    "dist/**/*",
    "coverage/**/*",
    "node_modules/**/*",
    "**/scripts/**/*"
  ],
  "env": {
    "browser": true,
    "node": true,
    "es2020": true
  },
  "extends": ["eslint:recommended"],
  "overrides": [
    {
      "files": ["*.ts"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:rxjs/recommended",
        "plugin:sonarjs/recommended",
        "plugin:jsdoc/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/strict-boolean-expressions": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",

        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/no-empty-lifecycle-method": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",

        "rxjs/no-unsafe-takeuntil": "error",
        "rxjs/no-unbound-methods": "error",
        "rxjs/no-nested-subscribe": "error",
        "rxjs/no-ignored-observable": "warn",
        "rxjs/no-exposed-subjects": "warn",
        "rxjs/finnish": "error",
        "rxjs/no-async-subscribe": "error",
        "rxjs/no-ignored-replay-buffer": "error",
        "rxjs/no-unsubscribe": "error",

        "sonarjs/no-duplicate-string": "warn",
        "sonarjs/cognitive-complexity": ["warn", 15],
        "sonarjs/no-identical-functions": "warn",
        "sonarjs/prefer-immediate-return": "warn",
        "sonarjs/no-redundant-jump": "error",
        "sonarjs/no-small-switch": "error",
        "sonarjs/prefer-object-literal": "error",

        "jsdoc/require-jsdoc": [
          "warn",
          {
            "publicOnly": true,
            "require": {
              "ArrowFunctionExpression": true,
              "ClassDeclaration": true,
              "ClassExpression": true,
              "FunctionDeclaration": true,
              "MethodDefinition": true
            }
          }
        ],
        "jsdoc/require-param": "warn",
        "jsdoc/require-param-type": "warn",
        "jsdoc/require-param-description": "warn",
        "jsdoc/require-returns": "warn",
        "jsdoc/require-returns-type": "warn",
        "jsdoc/require-returns-description": "warn",
        "jsdoc/newline-after-description": "warn",

        "import/order": [
          "error",
          {
            "groups": [
              "builtin",
              "external",
              "internal",
              ["parent", "sibling"],
              "index",
              "object",
              "type"
            ],
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {
        "@angular-eslint/template/accessibility-alt-text": "error",
        "@angular-eslint/template/accessibility-elements-content": "error",
        "@angular-eslint/template/accessibility-label-has-associated-control": "error",
        "@angular-eslint/template/accessibility-valid-aria": "error",
        "@angular-eslint/template/click-events-have-key-events": "error",
        "@angular-eslint/template/mouse-events-have-key-events": "error",
        "@angular-eslint/template/no-autofocus": "warn",
        "@angular-eslint/template/no-positive-tabindex": "error"
      }
    },
    {
      "files": ["*.js"],
      "rules": {
        "no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "no-undef": "error"
      }
    }
  ]
}
