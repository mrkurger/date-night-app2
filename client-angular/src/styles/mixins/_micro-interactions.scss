@use '../design-system/variables' as ds;
@use './_dark-mode.scss' as *;

// Hover Scale
// Slightly enlarges an element on hover
// @param {Number} $scale - The scale factor (default: 1.05)
@mixin hover-scale($scale: 1.05) {
  transition: transform var(--transition-fast) var(--transition-timing-default);

  @media (prefers-reduced-motion: no-preference) {
    &:hover {
      transform: scale($scale);
    }
  }
}

// Hover Lift
// Adds a subtle lift effect with shadow on hover
// @param {String} var(--nb-shadow) - The shadow to apply on hover (default: var(--shadow-md))
@mixin hover-lift(var(--nb-shadow): var(--shadow-md)) {
  transition:
    transform var(--transition-fast) var(--transition-timing-default),
    box-shadow var(--transition-fast) var(--transition-timing-default);

  @media (prefers-reduced-motion: no-preference) {
    &:hover {
      transform: translateY(-2px);
      box-shadow: var(--nb-shadow);
    }
  }
}

// Hover Color Shift
// Smoothly transitions between colors on hover
// @param {String} $property - The CSS property to transition (e.g., color, background-color)
// @param {Color} $from - The starting color
// @param {Color} $to - The target color on hover
@mixin hover-color-shift($property, $from, $to) {
  #{$property}: $from;
  transition: #{$property} var(--transition-fast) var(--transition-timing-default);

  &:hover {
    #{$property}: $to;
  }
}

// Hover Border
// Adds a colored border or underline effect on hover
// @param {Color} $color - The border color
// @param {String} $position - The border position (default: bottom)
// @param {Number} $width - The border width (default: 2px)
@mixin hover-border($color, $position: bottom, $width: 2px) {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    #{$position}: 0;
    left: 0;
    width: 0;
    height: $width;
    background-color: $color;
    transition: width var(--transition-normal) var(--transition-timing-default);
  }

  @media (prefers-reduced-motion: no-preference) {
    &:hover::after {
      width: 100%;
    }
  }
}

// Click Ripple
// Adds a ripple effect on click
@mixin click-ripple {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%, -50%);
    transform-origin: 50% 50%;
  }

  @media (prefers-reduced-motion: no-preference) {
    &:focus:not(:active)::after {
      animation: ripple 1s ease-out;
    }
  }
}

// Loading Button
// Adds a loading state to a button
// Usage: Add a .loading class to the button when loading
@mixin loading-button {
  position: relative;

  &.loading {
    pointer-events: none;
    opacity: 0.8;

    .button-text {
      visibility: hidden;
    }

    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 16px;
      height: 16px;
      margin-top: -8px;
      margin-left: -8px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top-color: var(--color-neutral-100);
      animation: spin 1s ease-in-out infinite;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    &.loading::after {
      animation: none;
      border-top-color: var(--color-neutral-100);
      border-right-color: var(--color-neutral-100);
    }
  }
}

// Skeleton Loading
// Creates a skeleton loading effect
@mixin skeleton-loading {
  background: linear-gradient(
    90deg,
    var(--color-neutral-300) 25%,
    var(--color-neutral-200) 50%,
    var(--color-neutral-300) 75%
  );
  background-size: 200% 100%;
  border-radius: var(--border-radius-sm);

  @media (prefers-reduced-motion: no-preference) {
    animation: skeleton-loading 1.5s infinite;
  }

  @include dark-mode {
    background: linear-gradient(
      90deg,
      var(--color-neutral-800) 25%,
      var(--color-neutral-700) 50%,
      var(--color-neutral-800) 75%
    );
  }
}

// Page Transition
// Adds a smooth transition when navigating between pages
@mixin page-transition {
  opacity: 0;
  transform: translateY(10px);

  @media (prefers-reduced-motion: no-preference) {
    animation: page-enter 0.3s forwards;
  }

  @media (prefers-reduced-motion: reduce) {
    opacity: 1;
    transform: none;
  }
}

// Feedback Animation - Success
// Adds a success animation
@mixin success-animation {
  position: relative;

  &.success {
    background-color: var(--color-success) !important;

    .success-icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 16px;
      height: 16px;
      font-size: 12px;

      @media (prefers-reduced-motion: no-preference) {
        animation: scale-in 0.3s ease-out;
      }
    }
  }
}

// Feedback Animation - Error
// Adds an error animation
@mixin error-animation {
  position: relative;

  &.error {
    background-color: var(--color-error) !important;

    .error-icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 16px;
      height: 16px;
      font-size: 12px;

      @media (prefers-reduced-motion: no-preference) {
        animation: scale-in 0.3s ease-out;
      }
    }
  }
}

// Shake Animation
// Adds a shake animation for invalid input
@mixin shake-animation {
  &.shake-active {
    @media (prefers-reduced-motion: no-preference) {
      animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
    }
  }
}

// Focus Visible
// Adds a consistent focus style for keyboard navigation
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// Required animations
@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  20% {
    transform: scale(25, 25);
    opacity: 0.5;
  }
  100% {
    opacity: 0;
    transform: scale(40, 40);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

@keyframes scale-in {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }
  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }
  30%,
  50%,
  70% {
    transform: translate3d(-4px, 0, 0);
  }
  40%,
  60% {
    transform: translate3d(4px, 0, 0);
  }
}

@keyframes page-enter {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
