@use 'variables' as *;

// Spacing Utilities
@each var(--key) /* TODO: Verify correct CSS variable */,
  in (
      '0': 0,
      '1': var(--spacing-1) /* TODO: Verify correct CSS variable */,
      '2': var(--spacing-2) /* TODO: Verify correct CSS variable */,
      '3': var(--spacing-3) /* TODO: Verify correct CSS variable */,
      '4': var(--spacing-4) /* TODO: Verify correct CSS variable */,
      '5': var(--spacing-5) /* TODO: Verify correct CSS variable */,
      '6': var(--spacing-6) /* TODO: Verify correct CSS variable */,
      '8': var(--spacing-8) /* TODO: Verify correct CSS variable */,
      '10': var(--spacing-10) /* TODO: Verify correct CSS variable */,
      '12': var(--spacing-12) /* TODO: Verify correct CSS variable */,
      '16': var(--spacing-16) /* TODO: Verify correct CSS variable */,
      '20': var(--spacing-20) /* TODO: Verify correct CSS variable */,
      '24': var(--spacing-24) /* TODO: Verify correct CSS variable */,
      'auto': auto
    )
{
  // Margin
  .m-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .mx-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-left: var(--value) /* TODO: Verify correct CSS variable */;
    margin-right: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .my-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-top: var(--value) /* TODO: Verify correct CSS variable */;
    margin-bottom: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .mt-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-top: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .mr-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-right: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .mb-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-bottom: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .ml-#{var(--key) /* TODO: Verify correct CSS variable */} {
    margin-left: var(--value) /* TODO: Verify correct CSS variable */;
  }

  // Padding
  .p-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .px-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-left: var(--value) /* TODO: Verify correct CSS variable */;
    padding-right: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .py-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-top: var(--value) /* TODO: Verify correct CSS variable */;
    padding-bottom: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .pt-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-top: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .pr-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-right: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .pb-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-bottom: var(--value) /* TODO: Verify correct CSS variable */;
  }
  .pl-#{var(--key) /* TODO: Verify correct CSS variable */} {
    padding-left: var(--value) /* TODO: Verify correct CSS variable */;
  }
}

// Display Utilities
.d-none {
  display: none;
}
.d-inline {
  display: inline;
}
.d-inline-block {
  display: inline-block;
}
.d-block {
  display: block;
}
.d-flex {
  display: flex;
}
.d-inline-flex {
  display: inline-flex;
}
.d-grid {
  display: grid;
}

// Flex Utilities
.flex-row {
  flex-direction: row;
}
.flex-column {
  flex-direction: column;
}
.flex-row-reverse {
  flex-direction: row-reverse;
}
.flex-column-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.justify-content-start {
  justify-content: flex-start;
}
.justify-content-end {
  justify-content: flex-end;
}
.justify-content-center {
  justify-content: center;
}
.justify-content-between {
  justify-content: space-between;
}
.justify-content-around {
  justify-content: space-around;
}
.justify-content-evenly {
  justify-content: space-evenly;
}

.align-items-start {
  align-items: flex-start;
}
.align-items-end {
  align-items: flex-end;
}
.align-items-center {
  align-items: center;
}
.align-items-baseline {
  align-items: baseline;
}
.align-items-stretch {
  align-items: stretch;
}

.align-self-start {
  align-self: flex-start;
}
.align-self-end {
  align-self: flex-end;
}
.align-self-center {
  align-self: center;
}
.align-self-baseline {
  align-self: baseline;
}
.align-self-stretch {
  align-self: stretch;
}

.flex-grow-0 {
  flex-grow: 0;
}
.flex-grow-1 {
  flex-grow: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.flex-shrink-1 {
  flex-shrink: 1;
}

// Gap Utilities
.gap-1 {
  gap: var(--spacing-1) /* TODO: Verify correct CSS variable */;
}
.gap-2 {
  gap: var(--spacing-2) /* TODO: Verify correct CSS variable */;
}
.gap-3 {
  gap: var(--spacing-3) /* TODO: Verify correct CSS variable */;
}
.gap-4 {
  gap: var(--spacing-4) /* TODO: Verify correct CSS variable */;
}
.gap-5 {
  gap: var(--spacing-5) /* TODO: Verify correct CSS variable */;
}
.gap-6 {
  gap: var(--spacing-6) /* TODO: Verify correct CSS variable */;
}
.gap-8 {
  gap: var(--spacing-8) /* TODO: Verify correct CSS variable */;
}
.gap-10 {
  gap: var(--spacing-10) /* TODO: Verify correct CSS variable */;
}

// Text Utilities
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-justify {
  text-align: justify;
}

.text-lowercase {
  text-transform: lowercase;
}
.text-uppercase {
  text-transform: uppercase;
}
.text-capitalize {
  text-transform: capitalize;
}

.font-weight-light {
  font-weight: var(--font-weight-light) /* TODO: Verify correct CSS variable */;
}
.font-weight-normal {
  font-weight: var(--font-weight-normal) /* TODO: Verify correct CSS variable */;
}
.font-weight-medium {
  font-weight: var(--font-weight-medium) /* TODO: Verify correct CSS variable */;
}
.font-weight-semibold {
  font-weight: var(--font-weight-semibold) /* TODO: Verify correct CSS variable */;
}
.font-weight-bold {
  font-weight: var(--font-weight-bold) /* TODO: Verify correct CSS variable */;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-break {
  word-wrap: break-word;
  word-break: break-word;
}

// Color Utilities
.text-primary {
  color: var(--color-primary);
}
.text-secondary {
  color: var(--color-secondary);
}
.text-success {
  color: var(--color-success);
}
.text-warning {
  color: var(--color-warning);
}
.text-error {
  color: var(--color-error);
}
.text-info {
  color: var(--color-info);
}
.text-neutral-100 {
  color: var(--color-neutral-100);
}
.text-neutral-200 {
  color: var(--color-neutral-200);
}
.text-neutral-300 {
  color: var(--color-neutral-300);
}
.text-neutral-400 {
  color: var(--color-neutral-400);
}
.text-neutral-500 {
  color: var(--color-neutral-500);
}
.text-neutral-600 {
  color: var(--color-neutral-600);
}
.text-neutral-700 {
  color: var(--color-neutral-700);
}
.text-neutral-800 {
  color: var(--color-neutral-800);
}
.text-neutral-900 {
  color: var(--color-neutral-900);
}

.bg-primary {
  background-color: var(--color-primary);
}
.bg-primary-light {
  background-color: var(--color-primary-light);
}
.bg-secondary {
  background-color: var(--color-secondary);
}
.bg-secondary-light {
  background-color: var(--color-secondary-light);
}
.bg-success {
  background-color: var(--color-success);
}
.bg-warning {
  background-color: var(--color-warning);
}
.bg-error {
  background-color: var(--color-error);
}
.bg-info {
  background-color: var(--color-info);
}
.bg-neutral-100 {
  background-color: var(--color-neutral-100);
}
.bg-neutral-200 {
  background-color: var(--color-neutral-200);
}
.bg-neutral-300 {
  background-color: var(--color-neutral-300);
}
.bg-neutral-400 {
  background-color: var(--color-neutral-400);
}
.bg-neutral-500 {
  background-color: var(--color-neutral-500);
}
.bg-neutral-600 {
  background-color: var(--color-neutral-600);
}
.bg-neutral-700 {
  background-color: var(--color-neutral-700);
}
.bg-neutral-800 {
  background-color: var(--color-neutral-800);
}
.bg-neutral-900 {
  background-color: var(--color-neutral-900);
}

// Border Utilities
.border {
  border: var(--border-width-thin) solid var(--color-neutral-300);
}
.border-top {
  border-top: var(--border-width-thin) solid var(--color-neutral-300);
}
.border-right {
  border-right: var(--border-width-thin) solid var(--color-neutral-300);
}
.border-bottom {
  border-bottom: var(--border-width-thin) solid var(--color-neutral-300);
}
.border-left {
  border-left: var(--border-width-thin) solid var(--color-neutral-300);
}

.border-0 {
  border: 0;
}
.border-top-0 {
  border-top: 0;
}
.border-right-0 {
  border-right: 0;
}
.border-bottom-0 {
  border-bottom: 0;
}
.border-left-0 {
  border-left: 0;
}

.border-primary {
  border-color: var(--color-primary);
}
.border-secondary {
  border-color: var(--color-secondary);
}
.border-success {
  border-color: var(--color-success);
}
.border-warning {
  border-color: var(--color-warning);
}
.border-error {
  border-color: var(--color-error);
}
.border-info {
  border-color: var(--color-info);
}

.rounded-none {
  border-radius: 0;
}
.rounded-sm {
  border-radius: var(--border-radius-sm) /* TODO: Verify correct CSS variable */;
}
.rounded-md {
  border-radius: var(--border-radius-md) /* TODO: Verify correct CSS variable */;
}
.rounded-lg {
  border-radius: var(--border-radius-lg) /* TODO: Verify correct CSS variable */;
}
.rounded-xl {
  border-radius: var(--border-radius-xl) /* TODO: Verify correct CSS variable */;
}
.rounded-2xl {
  border-radius: var(--border-radius-2xl) /* TODO: Verify correct CSS variable */;
}
.rounded-full {
  border-radius: var(--border-radius-full) /* TODO: Verify correct CSS variable */;
}

// Shadow Utilities
.shadow-none {
  box-shadow: none;
}
.shadow-sm {
  box-shadow: var(--shadow-sm) /* TODO: Verify correct CSS variable */;
}
.shadow-md {
  box-shadow: var(--shadow-md) /* TODO: Verify correct CSS variable */;
}
.shadow-lg {
  box-shadow: var(--shadow-lg) /* TODO: Verify correct CSS variable */;
}
.shadow-xl {
  box-shadow: var(--shadow-xl) /* TODO: Verify correct CSS variable */;
}
.shadow-2xl {
  box-shadow: var(--shadow-2xl) /* TODO: Verify correct CSS variable */;
}
.shadow-inner {
  box-shadow: var(--shadow-inner) /* TODO: Verify correct CSS variable */;
}

// Position Utilities
.position-static {
  position: static;
}
.position-relative {
  position: relative;
}
.position-absolute {
  position: absolute;
}
.position-fixed {
  position: fixed;
}
.position-sticky {
  position: sticky;
}

.top-0 {
  top: 0;
}
.right-0 {
  right: 0;
}
.bottom-0 {
  bottom: 0;
}
.left-0 {
  left: 0;
}

// Width and Height Utilities
.w-auto {
  width: auto;
}
.w-25 {
  width: 25%;
}
.w-50 {
  width: 50%;
}
.w-75 {
  width: 75%;
}
.w-100 {
  width: 100%;
}

.h-auto {
  height: auto;
}
.h-25 {
  height: 25%;
}
.h-50 {
  height: 50%;
}
.h-75 {
  height: 75%;
}
.h-100 {
  height: 100%;
}

// Visibility Utilities
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}

// Overflow Utilities
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-visible {
  overflow: visible;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-hidden {
  overflow-y: hidden;
}

// Z-index Utilities
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.z-auto {
  z-index: auto;
}
.z-dropdown {
  z-index: var(--z-index-dropdown) /* TODO: Verify correct CSS variable */;
}
.z-sticky {
  z-index: var(--z-index-sticky) /* TODO: Verify correct CSS variable */;
}
.z-fixed {
  z-index: var(--z-index-fixed) /* TODO: Verify correct CSS variable */;
}
.z-modal-backdrop {
  z-index: var(--z-index-modal-backdrop) /* TODO: Verify correct CSS variable */;
}
.z-modal {
  z-index: var(--z-index-modal) /* TODO: Verify correct CSS variable */;
}
.z-popover {
  z-index: var(--z-index-popover) /* TODO: Verify correct CSS variable */;
}
.z-tooltip {
  z-index: var(--z-index-tooltip) /* TODO: Verify correct CSS variable */;
}
