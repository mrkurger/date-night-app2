@use 'variables' as *;

// Animation Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideLeft {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideRight {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes zoomOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.95);
    opacity: 0;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

// Animation Mixins
@mixin animate() {
  animation-name: var(--animation) /* TODO: Verify correct CSS variable */;
  animation-duration: var(--duration) /* TODO: Verify correct CSS variable */;
  animation-timing-function: var(--timing) /* TODO: Verify correct CSS variable */;
  animation-delay: var(--delay) /* TODO: Verify correct CSS variable */;
  animation-fill-mode: both;
}

// Animation Classes
.fade-in {
  @include animate(fadeIn);
}

.fade-out {
  @include animate(fadeOut);
}

.slide-up {
  @include animate(slideUp);
}

.slide-down {
  @include animate(slideDown);
}

.slide-left {
  @include animate(slideLeft);
}

.slide-right {
  @include animate(slideRight);
}

.zoom-in {
  @include animate(zoomIn);
}

.zoom-out {
  @include animate(zoomOut);
}

.pulse {
  @include animate(pulse, 1s, ease-in-out, 0s);

  animation-iteration-count: infinite;
}

.spin {
  @include animate(spin, 1s, linear, 0s);

  animation-iteration-count: infinite;
}

.bounce {
  @include animate(bounce, 1s, ease-in-out, 0s);

  animation-iteration-count: infinite;
}

// Duration Modifiers
.duration-fast {
  animation-duration: var(--transition-fast) /* TODO: Verify correct CSS variable */;
}

.duration-normal {
  animation-duration: var(--transition-normal) /* TODO: Verify correct CSS variable */;
}

.duration-slow {
  animation-duration: var(--transition-slow) /* TODO: Verify correct CSS variable */;
}

// Timing Function Modifiers
.timing-linear {
  animation-timing-function: linear;
}

.timing-ease {
  animation-timing-function: ease;
}

.timing-ease-in {
  animation-timing-function: ease-in;
}

.timing-ease-out {
  animation-timing-function: ease-out;
}

.timing-ease-in-out {
  animation-timing-function: ease-in-out;
}

.timing-default {
  animation-timing-function: var(--transition-timing-default)
    /* TODO: Verify correct CSS variable */;
}

// Delay Modifiers
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

// Transition Utilities
.transition-all {
  transition: all var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;
}

.transition-colors {
  transition:
    background-color var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */,
    border-color var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */,
    color var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */,
    fill var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */,
    stroke var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */;
}

.transition-opacity {
  transition: opacity var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;
}

.transition-shadow {
  transition: box-shadow var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;
}

.transition-transform {
  transition: transform var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;
}

// Hover Effect Utilities
.hover-scale {
  transition: transform var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;

  &:hover {
    transform: scale(1.05);
  }
}

.hover-lift {
  transition:
    transform var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */,
    box-shadow var(--transition-normal) /* TODO: Verify correct CSS variable */
      var(--transition-timing-default) /* TODO: Verify correct CSS variable */;

  &:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg) /* TODO: Verify correct CSS variable */;
  }
}

.hover-glow {
  transition: box-shadow var(--transition-normal) /* TODO: Verify correct CSS variable */
    var(--transition-timing-default) /* TODO: Verify correct CSS variable */;

  &:hover {
    box-shadow: 0 0 15px rgba(var(--color-primary), 0.5);
  }
}
