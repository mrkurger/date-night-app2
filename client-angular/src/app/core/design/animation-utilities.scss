/**
 * Animation Utilities
 * 
 * This file provides mixins and functions to help implement animations and transitions.
 * It follows the design system's animation guidelines.
 * 
 * Usage:
 * @use 'path/to/animation-utilities' as animation;
 * 
 * .element {
 *   @include animation.fade-in;
 * }
 * 
 * .button {
 *   @include animation.transition(all);
 *   
 *   &:hover {
 *     transform: scale(1.05);
 *   }
 * }
 */

// Transition mixin
// @param {String} var(--property) /* TODO: Verify correct CSS variable */ - CSS property to transition
// @param {String} var(--duration) /* TODO: Verify correct CSS variable */ - Duration of the transition
// @param {String} var(--timing) /* TODO: Verify correct CSS variable */ - Timing function of the transition
// @param {String} var(--delay) /* TODO: Verify correct CSS variable */ - Delay before the transition starts
@mixin transition() {
  transition: var(--property) /* TODO: Verify correct CSS variable */ var(--duration)
    /* TODO: Verify correct CSS variable */ var(--timing) /* TODO: Verify correct CSS variable */
    var(--delay) /* TODO: Verify correct CSS variable */;
}

// Fade in animation
@mixin fade-in() {
  & {
    animation: fade-in var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
      /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
      forwards;
  }
}

// Fade out animation
@mixin fade-out() {
  animation: fade-out var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    forwards;
}

// Slide in from top animation
@mixin slide-in-top() {
  & {
    animation: slide-in-top var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
      /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
      forwards;
  }
}

// Slide in from bottom animation
@mixin slide-in-bottom() {
  & {
    animation: slide-in-bottom var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
      /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
      forwards;
  }
}

// Slide in from left animation
@mixin slide-in-left() {
  animation: slide-in-left var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    forwards;
}

// Slide in from right animation
@mixin slide-in-right() {
  & {
    animation: slide-in-right var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
      /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
      forwards;
  }
}

// Scale in animation
@mixin scale-in() {
  animation: scale-in var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    forwards;
}

// Scale out animation
@mixin scale-out() {
  animation: scale-out var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    forwards;
}

// Rotate animation
@mixin rotate() {
  animation: rotate var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    infinite;
  animation-fill-mode: forwards;
  transform-origin: center;
}

// Pulse animation
@mixin pulse() {
  animation: pulse var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    infinite;
}

// Shake animation
@mixin shake() {
  animation: shake var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */;
}

// Bounce animation
@mixin bounce() {
  animation: bounce var(--duration) /* TODO: Verify correct CSS variable */ var(--timing)
    /* TODO: Verify correct CSS variable */ var(--delay) /* TODO: Verify correct CSS variable */
    infinite;
}

// Stagger children animations
// @param {String} $animation - Animation name
// @param {String} $duration - Duration of the animation
// @param {String} $timing - Timing function of the animation
// @param {String} $stagger - Delay between each child
// @param {String} $selector - Child selector
@mixin stagger-children(
  $selector: '> *',
  $animation: fade-in,
  $duration: 0.3s,
  $timing: ease-in-out,
  $stagger: 0.1s
) {
  #{$selector} {
    animation: $animation $duration $timing;
    animation-fill-mode: both;

    @for $i from 1 through 20 {
      &:nth-child(#{$i}) {
        animation-delay: $i * $stagger;
      }
    }
  }
}

// Animation keyframes
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slide-in-top {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-in-bottom {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-in-left {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scale-out {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

// Reduced motion
@mixin respect-reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    .respect-reduced-motion {
      animation: none !important;
      transition: none !important;
    }
  }
}
