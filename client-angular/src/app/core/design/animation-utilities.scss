/**
 * Animation Utilities
 * 
 * This file provides mixins and functions to help implement animations and transitions.
 * It follows the design system's animation guidelines.
 * 
 * Usage:
 * @use 'path/to/animation-utilities' as animation;
 * 
 * .element {
 *   @include animation.fade-in;
 * }
 * 
 * .button {
 *   @include animation.transition(all);
 *   
 *   &:hover {
 *     transform: scale(1.05);
 *   }
 * }
 */

@use 'design-tokens' as tokens;

// Transition mixin
// @param {String} $property - CSS property to transition
// @param {String} $duration - Duration of the transition
// @param {String} $timing - Timing function of the transition
// @param {String} $delay - Delay before the transition starts
@mixin transition(
  $property: all,
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  transition: $property $duration $timing $delay;
}

// Fade in animation
@mixin fade-in(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  & {
    animation: fade-in $duration $timing $delay forwards;
  }
}

// Fade out animation
@mixin fade-out(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: fade-out $duration $timing $delay forwards;
}

// Slide in from top animation
@mixin slide-in-top(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  & {
    animation: slide-in-top $duration $timing $delay forwards;
  }
}

// Slide in from bottom animation
@mixin slide-in-bottom(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  & {
    animation: slide-in-bottom $duration $timing $delay forwards;
  }
}

// Slide in from left animation
@mixin slide-in-left(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: slide-in-left $duration $timing $delay forwards;
}

// Slide in from right animation
@mixin slide-in-right(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  & {
    animation: slide-in-right $duration $timing $delay forwards;
  }
}

// Scale in animation
@mixin scale-in(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: scale-in $duration $timing $delay forwards;
}

// Scale out animation
@mixin scale-out(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: scale-out $duration $timing $delay forwards;
}

// Rotate animation
@mixin rotate(
  $degrees: 360deg,
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: rotate $duration $timing $delay infinite;
  animation-fill-mode: forwards;
  transform-origin: center;
}

// Pulse animation
@mixin pulse(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: pulse $duration $timing $delay infinite;
}

// Shake animation
@mixin shake(
  $duration: tokens.$transition-fast,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: shake $duration $timing $delay;
}

// Bounce animation
@mixin bounce(
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $delay: 0s
) {
  animation: bounce $duration $timing $delay infinite;
}

// Stagger children animations
// @param {String} $animation - Animation name
// @param {String} $duration - Duration of the animation
// @param {String} $timing - Timing function of the animation
// @param {String} $stagger - Delay between each child
// @param {String} $selector - Child selector
@mixin stagger-children(
  $animation,
  $duration: tokens.$transition-normal,
  $timing: tokens.$transition-timing-default,
  $stagger: 0.1s,
  $selector: '> *'
) {
  #{$selector} {
    animation: $animation $duration $timing;
    animation-fill-mode: both;

    @for $i from 1 through 20 {
      &:nth-child(#{$i}) {
        animation-delay: $i * $stagger;
      }
    }
  }
}

// Animation keyframes
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slide-in-top {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-in-bottom {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-in-left {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-in-right {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scale-out {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

// Reduced motion
@mixin respect-reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    .respect-reduced-motion {
      animation: none !important;
      transition: none !important;
    }
  }
}
