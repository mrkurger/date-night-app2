<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>AI Lessons: Auth - Date Night App</title>
    <link rel="stylesheet" href="/docs/component-library/styles/style.css" />
  </head>
  <body>
    <header>
      <div class="container">
        <h1>Date Night App Documentation</h1>
        <nav>
          <ul>
            <li><a href="/_docs_index.html">Home</a></li>
            <li><a href="/_glossary.html">Glossary</a></li>
          </ul>
        </nav>
      </div>
    </header>

    <main class="container">
      <div class="page-content">
        <aside class="sidebar">
          <h3>Auth</h3>
          <ul>
            <li><a href="./CHANGELOG.html">Changelog</a></li>
            <li><a href="./AILESSONS.html">AI Lessons</a></li>
            <li><a href="./GLOSSARY.html">Glossary</a></li>
          </ul>
        </aside>

        <article class="content">
          <h1>AI Lessons: Auth</h1>

          <p>
            This file contains lessons learned and best practices for the Auth component/module.
          </p>

          <h2>Best Practices</h2>

          <ul>
            <li>Always use HTTP-only cookies for storing refresh tokens to prevent XSS attacks</li>
            <li>
              Implement short-lived access tokens (15 minutes) with refresh token rotation for
              better security
            </li>
            <li>Use bcrypt for password hashing with a salt factor of at least 10</li>
            <li>
              Implement rate limiting on authentication endpoints to prevent brute force attacks
            </li>
            <li>Always validate user input on both client and server sides</li>
            <li>Use HTTPS for all authentication-related communication</li>
          </ul>

          <h2>Common Patterns</h2>

          <ul>
            <li>JWT-based authentication with refresh token rotation</li>
            <li>Interceptor pattern for automatically adding auth tokens to API requests</li>
            <li>Guard pattern for protecting routes based on authentication state</li>
            <li>Reactive forms with validation for authentication forms</li>
            <li>Observable-based authentication state management</li>
            <li>Social authentication integration with OAuth providers</li>
          </ul>

          <h2>Known Issues</h2>

          <ul>
            <li>
              Token expiration handling can cause race conditions when multiple requests fail
              simultaneously
            </li>
            <li>
              Social authentication may fail in private browsing mode due to third-party cookie
              restrictions
            </li>
            <li>Password reset flow may break if emails are delayed or caught by spam filters</li>
            <li>Session management across multiple devices can be confusing for users</li>
          </ul>

          <h2>Implementation Notes</h2>

          <ul>
            <li>Authentication state is managed using a BehaviorSubject in the AuthService</li>
            <li>
              JWT tokens are stored in localStorage for access tokens and HTTP-only cookies for
              refresh tokens
            </li>
            <li>
              Token refresh is handled automatically by the AuthInterceptor when a 401 response is
              received
            </li>
            <li>
              Social authentication uses the OAuth 2.0 authorization code flow with PKCE for better
              security
            </li>
            <li>Password reset tokens are short-lived (1 hour) and single-use</li>
          </ul>

          <h2>Documentation Migration</h2>

          <ul>
            <li>Authentication documentation was migrated from Markdown to HTML format</li>
            <li>The original documentation was in /docs/features/AUTH.MD</li>
            <li>The HTML documentation is now co-located with the code in authentication.html</li>
            <li>
              Documentation includes architecture, API endpoints, data flow, and security
              considerations
            </li>
          </ul>

          <h2>How to use this file</h2>

          <p>
            When discovering new patterns, best practices, or lessons related to this component, add
            them to this file. This helps maintain knowledge about the component and guides future
            development.
          </p>
        </article>
      </div>
    </main>

    <footer>
      <div class="container">
        <p>&copy; 2025 Date Night App. All rights reserved.</p>
      </div>
    </footer>
  </body>
</html>
