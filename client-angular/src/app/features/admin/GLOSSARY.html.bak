<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Glossary: Admin - Date Night App</title>
  <link rel="stylesheet" href="/docs/component-library/styles/style.css">
  <style>
    .glossary-entry {
      margin-bottom: 1.5rem;
      padding-bottom: 1.5rem;
      border-bottom: 1px solid var(--border-color);
    }
    .entry-meta {
      color: var(--text-light);
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
    }
    .params-table {
      width: 100%;
      margin-bottom: 1rem;
    }
    .tooltip {
      position: relative;
      display: inline-block;
      border-bottom: 1px dotted var(--text-color);
    }
    .tooltip .tooltip-text {
      visibility: hidden;
      width: 300px;
      background-color: var(--background-alt);
      color: var(--text-color);
      text-align: left;
      border-radius: 6px;
      padding: 10px;
      position: absolute;
      z-index: 1;
      bottom: 125%;
      left: 50%;
      margin-left: -150px;
      opacity: 0;
      transition: opacity 0.3s;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      font-size: 0.9rem;
    }
    .tooltip:hover .tooltip-text {
      visibility: visible;
      opacity: 1;
    }
  </style>
</head>
<body>
  <header>
    <div class="container">
      <h1>Date Night App Documentation</h1>
      <nav>
        <ul>
          <li><a href="/_docs_index.html">Home</a></li>
          <li><a href="/_glossary.html">Glossary</a></li>
        </ul>
      </nav>
    </div>
  </header>
  
  <main class="container">
    <div class="page-content">
      <aside class="sidebar">
        <h3>Admin</h3>
        <ul>
          <li><a href="./CHANGELOG.html">Changelog</a></li>
          <li><a href="./AILESSONS.html">AI Lessons</a></li>
          <li><a href="./GLOSSARY.html">Glossary</a></li>
        </ul>
      </aside>
      
      <article class="content">
        <h1>Glossary: Admin</h1>
        
        <p>This file contains a glossary of functions and methods defined in the Admin component/module.</p>
        <p>This file is automatically generated. Do not edit it directly.</p>
        
        <div class="search-container">
          <input type="text" id="glossary-search" placeholder="Search glossary...">
        </div>
        
        <div class="glossary-entries">

<div class="glossary-entry" id="createAlertForm">
  <h3>createAlertForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create the alert form</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
  
  
  
</div>

<div class="glossary-entry" id="createNotificationGroup">
  <h3>createNotificationGroup</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Create a notification form group</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="addNotification">
  <h3>addNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get the notifications form array / get notificationsArray(): FormArray { return this.alertForm.get('notifications') as FormArray; } /** Add a new notification</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="removeNotification">
  <h3>removeNotification</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Remove a notification</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification to remove</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="onConditionTypeChange">
  <h3>onConditionTypeChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle condition type change</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onChannelChange">
  <h3>onChannelChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle notification channel change</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>index</td>
      <td><code></code></td>
      <td>Index of the notification</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="populateForm">
  <h3>populateForm</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Populate the form with an existing alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to populate the form with</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="saveAlert">
  <h3>saveAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-form-dialog/alert-form-dialog.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Save the alert</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadAlerts">
  <h3>loadAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load alert definitions</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadActiveAlerts">
  <h3>loadActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load active alert events</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onPageChange">
  <h3>onPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handle page change event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Page event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortAlerts">
  <h3>sortAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="sortActiveAlerts">
  <h3>sortActiveAlerts</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sort active alerts</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>sort</td>
      <td><code></code></td>
      <td>Sort event</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="compare">
  <h3>compare</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Compare function for sorting</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openAlertDialog">
  <h3>openAlertDialog</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Open alert creation/edit dialog</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Optional alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="editAlert">
  <h3>editAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Edit an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to edit</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="testAlert">
  <h3>testAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Test an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to test</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="deleteAlert">
  <h3>deleteAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Delete an alert</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to delete</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleAlert">
  <h3>toggleAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle alert enabled state</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to toggle</td>
    </tr>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>New enabled state</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="acknowledgeAlert">
  <h3>acknowledgeAlert</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Acknowledge an alert event</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to acknowledge</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="viewAlertDetails">
  <h3>viewAlertDetails</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>View alert event details</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>event</td>
      <td><code></code></td>
      <td>Alert event to view</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityClass">
  <h3>getSeverityClass</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity CSS class</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getSeverityLabel">
  <h3>getSeverityLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get severity label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>severity</td>
      <td><code></code></td>
      <td>Alert severity</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getConditionDescription">
  <h3>getConditionDescription</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get condition description</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>condition</td>
      <td><code></code></td>
      <td>Alert condition</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getTimeWindowLabel">
  <h3>getTimeWindowLabel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Get time window label</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>timeWindow</td>
      <td><code></code></td>
      <td>Time window</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="hasChannel">
  <h3>hasChannel</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/alert-management/alert-management.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Check if alert has a specific notification channel</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>alert</td>
      <td><code></code></td>
      <td>Alert to check</td>
    </tr>
    
    <tr>
      <td>channel</td>
      <td><code></code></td>
      <td>Channel to check for</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="toggleRealtime">
  <h3>toggleRealtime</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggle real-time updates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>enabled</td>
      <td><code></code></td>
      <td>Whether real-time updates should be enabled</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="loadDashboardData">
  <h3>loadDashboardData</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/components/error-dashboard/error-dashboard.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Load dashboard data from the REST API</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnInit">
  <h3>ngOnInit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for content moderation by administrators Allows reviewing and moderating user-submitted media / @Component({ selector: 'app-content-moderation', templateUrl: './content-moderation.component.html', styleUrls: ['./content-moderation.component.scss'], standalone: true, imports: [ CommonModule, FormsModule, ReactiveFormsModule, NgbModalModule, ModerationModalComponent, ], }) export class ContentModerationComponent implements OnInit, OnDestroy { // Data pendingMedia: PendingMedia[] = []; filteredMedia: PendingMedia[] = []; paginatedMedia: PendingMedia[] = []; selectedMedia: PendingMedia | null = null; // UI state loading = false; error = ''; moderationForm: FormGroup; // Filtering searchTerm = ''; mediaTypeFilter = 'all'; sortOrder = 'newest'; // Pagination currentPage = 1; itemsPerPage = 12; totalPages = 1; // Cleanup private destroy$ = new Subject<void>(); constructor( private mediaService: MediaService, private notificationService: NotificationService, private modalService: NgbModal, private fb: FormBuilder, private contentSanitizer: ContentSanitizerService ) { this.moderationForm = this.fb.group({ status: ['approved', [Validators.required]], notes: ['', [Validators.maxLength(500), Validators.required]], }); } /** Lifecycle hook that is called when the component is initialized Loads pending media for moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="loadPendingMedia">
  <h3>loadPendingMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Loads all pending media items that need moderation</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="applyFilters">
  <h3>applyFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Applies filters and sorting to the pending media items</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="sortMedia">
  <h3>sortMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sorts media items based on the selected sort order</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>Array of media items to sort</td>
    </tr>
    
    <tr>
      <td>sortOrder</td>
      <td><code></code></td>
      <td>The sort order to apply</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - Sorted array of media items</p>
  
</div>

<div class="glossary-entry" id="updatePaginatedMedia">
  <h3>updatePaginatedMedia</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Updates the paginated media based on current page and items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="changePage">
  <h3>changePage</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Changes the current page</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>page</td>
      <td><code></code></td>
      <td>The page number to navigate to</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="getPageNumbers">
  <h3>getPageNumbers</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Gets an array of page numbers for pagination</p>
  </div>
  
  
<h4>Returns</h4>
<p><code></code> - Array of page numbers</p>
  
</div>

<div class="glossary-entry" id="onItemsPerPageChange">
  <h3>onItemsPerPageChange</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles changes to items per page</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="resetFilters">
  <h3>resetFilters</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Resets all filters to their default values</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="openModerationModal">
  <h3>openModerationModal</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Opens the moderation modal for a specific media item</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>modal</td>
      <td><code></code></td>
      <td>The modal template reference</td>
    </tr>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item to be moderated</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="submitModeration">
  <h3>submitModeration</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Submits the moderation decision for the selected media</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="getMediaTypeIcon">
  <h3>getMediaTypeIcon</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Returns the appropriate Font Awesome icon class based on media type</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>type</td>
      <td><code></code></td>
      <td>The type of media ('video' or 'image')</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - The Font Awesome icon class name</p>
  
</div>

<div class="glossary-entry" id="getSafeUrl">
  <h3>getSafeUrl</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Sanitizes a URL for safe use in templates</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>url</td>
      <td><code></code></td>
      <td>The URL to sanitize</td>
    </tr>
    
  </tbody>
</table>
  
<h4>Returns</h4>
<p><code></code> - A safe URL that can be used in templates</p>
  
</div>

<div class="glossary-entry" id="onMediaLoadError">
  <h3>onMediaLoadError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
<h4>Parameters</h4>
<table class="params-table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>media</td>
      <td><code></code></td>
      <td>The media item that failed to load</td>
    </tr>
    
  </tbody>
</table>
  
  
</div>

<div class="glossary-entry" id="ngOnDestroy">
  <h3>ngOnDestroy</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/content-moderation.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Lifecycle hook that is called when the component is destroyed Cleans up subscriptions to prevent memory leaks</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="ngOnChanges">
  <h3>ngOnChanges</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Component for displaying and handling media moderation in a modal / @Component({ selector: 'app-moderation-modal', templateUrl: './moderation-modal.component.html', styleUrls: ['./moderation-modal.component.scss'], standalone: true, imports: [CommonModule, ReactiveFormsModule], }) export class ModerationModalComponent implements OnChanges { @Input() media: PendingMedia | null = null; @Input() form!: FormGroup; @Output() onSubmit = new EventEmitter<void>(); @Output() onClose = new EventEmitter<void>(); safeMediaUrl: SafeUrl | null = null; isFullscreen = false; mediaError = false; constructor(private contentSanitizer: ContentSanitizerService) {} /** Lifecycle hook that is called when input properties change Sanitizes the media URL for safe display</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="toggleFullscreen">
  <h3>toggleFullscreen</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Toggles fullscreen mode for media preview</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="validateAndSubmit">
  <h3>validateAndSubmit</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Validates the form before submission</p>
  </div>
  
  
  
</div>

<div class="glossary-entry" id="onMediaError">
  <h3>onMediaError</h3>
  <p class="entry-meta">method | <a href="/client-angular/src/app/features/admin/content-moderation/moderation-modal/moderation-modal.component.ts">Source</a></p>
  <div class="entry-description">
    <p>Handles media loading errors</p>
  </div>
  
  
  
</div>
</div>
      </article>
    </div>
  </main>
  
  <footer>
    <div class="container">
      <p>&copy; 2025 Date Night App. All rights reserved.</p>
    </div>
  </footer>
  
  <script>
    // Search functionality
    document.getElementById('glossary-search').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const entries = document.querySelectorAll('.glossary-entry');
      
      entries.forEach(entry => {
        const name = entry.querySelector('h3').textContent.toLowerCase();
        const description = entry.querySelector('.entry-description').textContent.toLowerCase();
        
        if (name.includes(searchTerm) || description.includes(searchTerm)) {
          entry.style.display = '';
        } else {
          entry.style.display = 'none';
        }
      });
    });
  </script>
</body>
</html>