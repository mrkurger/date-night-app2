@use 'sass:color';

// Variables
$hero-section-height: 70vh;
$card-animation-duration: 300ms;

:host {
  display: block;
  background: var(--surface-ground);
  min-height: 100vh;

  ::ng-deep {
    // Card overrides
    .p-card {
      background: var(--surface-card);
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);

      .p-card-body {
        padding: 0;
      }
    }

    // Avatar overrides
    .p-avatar {
      &.online-avatar::after {
        content: '';
        position: absolute;
        bottom: 0;
        right: 0;
        width: 10px;
        height: 10px;
        background: var(--green-500);
        border-radius: 50%;
        border: 2px solid var(--surface-card);
      }

      &.offline-avatar::after {
        content: '';
        position: absolute;
        bottom: 0;
        right: 0;
        width: 10px;
        height: 10px;
        background: var(--surface-400);
        border-radius: 50%;
        border: 2px solid var(--surface-card);
      }
    }
  }
}

// Hero Section
.hero-card {
  margin-bottom: 2rem;

  .hero-header {
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: var(--surface-card);

    .user-info {
      display: flex;
      align-items: center;
      gap: 1rem;

      .user-details {
        display: flex;
        flex-direction: column;

        .user-name {
          font-weight: 600;
          color: var(--text-color);
        }

        .user-location {
          color: var(--text-color-secondary);
          font-size: 0.875rem;
        }
      }
    }

    .hero-actions {
      display: flex;
      gap: 0.5rem;
    }
  }

  .hero-content {
    height: $hero-section-height;
    background-size: cover;
    background-position: center;
    position: relative;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 100%);
    }

    h1,
    p,
    .hero-tags {
      position: relative;
      color: white;
    }

    h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .hero-description {
      font-size: 1.25rem;
      margin-bottom: 2rem;
      max-width: 600px;
    }

    .hero-tags {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }
  }
}

// Main Content
.netflix-content {
  padding: 2rem 0;

  .filters-bar {
    margin-bottom: 2rem;
    background: var(--surface-card);
    padding: 1rem 0;
    box-shadow: var(--card-shadow);

    .filters-content {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;

      .section-title {
        margin: 0;
        color: var(--text-color);
      }
    }
  }
}

// States
.loading-container,
.error-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  gap: 1rem;
  color: var(--text-color-secondary);
}

// Netflix-style Rows
.netflix-rows {
  .row-section {
    margin-bottom: 3rem;

    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    .row-title {
      margin-bottom: 1rem;
      color: var(--text-color);
    }
  }
}

// Card Grid
.card-grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));

  .netflix-card {
    transition: transform $card-animation-duration ease-in-out;

    &:hover {
      transform: scale(1.05);
      z-index: 1;

      .card-actions {
        opacity: 1;
      }
    }

    .card-user-info {
      padding: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;

      .advertiser-name {
        font-weight: 500;
        color: var(--text-color);
      }
    }

    .card-content {
      height: 300px;
      background-size: cover;
      background-position: center;
      position: relative;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 100%);
      }

      h3,
      p,
      .card-tags {
        position: relative;
        color: white;
      }

      h3 {
        margin-bottom: 0.5rem;
      }

      p {
        font-size: 0.875rem;
        margin-bottom: 1rem;
      }

      .card-tags {
        display: flex;
        gap: 0.25rem;
        flex-wrap: wrap;
      }
    }

    .card-actions {
      padding: 0.5rem;
      display: flex;
      justify-content: center;
      gap: 0.5rem;
      opacity: 0;
      transition: opacity $card-animation-duration ease-in-out;
    }
  }
}

// Empty State
.empty-row {
  text-align: center;
  padding: 2rem;
  background: var(--surface-card);
  border-radius: var(--border-radius);
  color: var(--text-color-secondary);
}

// Floating Action Button
.floating-action-button {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  z-index: 1000;
}

// Dialog Styling
::ng-deep {
  .p-dialog {
    .p-dialog-header {
      padding: 1.5rem;
    }

    .p-dialog-content {
      padding: 0 1.5rem 1.5rem 1.5rem;
    }

    .field {
      margin-bottom: 1.5rem;

      label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--text-color);
      }
    }

    .field-checkbox {
      display: flex;
      align-items: center;
      margin-bottom: 1.5rem;

      label {
        margin-left: 0.5rem;
        color: var(--text-color);
      }
    }

    .p-dialog-footer {
      padding: 1.5rem;
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
    }
  }
}

// Responsive Breakpoints
@media screen and (max-width: 768px) {
  .hero-card {
    .hero-content {
      height: 50vh;

      h1 {
        font-size: 2rem;
      }

      .hero-description {
        font-size: 1rem;
      }
    }
  }

  .hero-actions {
    flex-direction: column;
    width: 100%;

    button {
      width: 100%;
    }
  }

  .card-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }
}

// Toast Customization
::ng-deep {
  .p-toast {
    .p-toast-message {
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
    }
  }
}
