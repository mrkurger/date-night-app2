{
  "git.enableSmartCommit": true,
  "git.autofetch": true,
  "editor.inlineSuggest.syntaxHighlightingEnabled": true,
  "tabnine.experimentalAutoImports": true,
  "diffEditor.codeLens": true,
  "zencoder.mcpServers": {},
  "zencoder.requirementsTool.enable": true,
  "zencoder.excludeFilesFromIndexing": [
    "build/**",
    "dist/**",
    "out/**",
    ".hg/**",
    "tmp/**",
    "temp/**",
    "cache/**",
    "venv/**",
    ".venv/**",
    "env/**",
    "vendor/**",
    "test_output/**",
    "coverage/**",
    "logs/**",
    "db/**",
    "node_modules/**"
  ],
  "zencoder.shellTool.allowedCommands": [
    "whoami",
    "find",
    "sort",
    "cd",
    "echo",
    "ls",
    "pwd",
    "cat",
    "head",
    "tail",
    "uname",
    "id",
    "env",
    "printenv",
    "df",
    "free",
    "ps",
    "grep",
    "uniq",
    "wc",
    "diff",
    "dir",
    "tree",
    "chdir",
    "type",
    "help",
    "ver",
    "systeminfo",
    "ipconfig",
    "tasklist",
    "hostname",
    "netstat",
    "which",
    "awk",
    "git status",
    "git diff",
    "git log",
    "git branch",
    "npm run",
    "ln -s ../setup.js",
    "mkdir",
    "python3",
    "npm",
    "chmod",
    "ng",
    "mongod",
    "python",
    "lsof",
    "kill",
    "curl",
    "node",
    "sudo",
    "run_web_server.sh",
    "mv",
    "rm",
    "cp",
    "sleep",
    "pkill",
    "true",
    "pip3",
    "bash",
    "sed",
    "touch",
    "npx",
    "jscpd",
    "xargs",
    "git",
    "this",
    "date",
    "rmdir",
    "fix-project.sh",
    "fix-typescript-errors.sh",
    "hexdump",
    "fix-angular-issues.sh",
    "fix_ad_id.sh",
    "fix_this_prefix.sh",
    "fix_favorites_list.sh",
    "fix-scss-imports.sh",
    "fix-scss-variables.sh",
    "fix-scss-double-namespace.sh",
    "fix-scss-all-issues.sh",
    "fix-scss-paths-and-dollars.sh",
    "fix-scss-variable-references.sh",
    "fix-typography-mixins.sh",
    "fix-emerald-components.sh",
    "fix-remaining-scss-issues.sh",
    "fix-all-scss-issues.sh",
    "fix-typography-and-components.sh",
    "fix-final-scss-issues.sh",
    "fix-very-last-scss-issues.sh",
    "fix-absolute-final-scss-issues.sh",
    "fix-final-remaining-scss-issues.sh",
    "fix-last-scss-issues.sh",
    "fix-very-very-last-scss-issues.sh",
    "fix-final-final-scss-issues.sh",
    "fix-absolute-final-final-scss-issues.sh",
    "fix-absolutely-final-scss-issues.sh",
    "fix-really-final-scss-issues.sh",
    "fix-final-remaining-scss-issues-2.sh",
    "migrate-docs.sh",
    "stat",
    "timeout",
    "gtimeout",
    "fix-nebular-imports.sh",
    "update-nebular-imports.sh",
    "fix-nebular-direct-imports.sh",
    "fix-duplicate-imports.sh",
    "fix-nebular-imports-comprehensive.sh",
    "fix-duplicate-module-imports.sh",
    "fix-specific-files.sh",
    "add-custom-elements-schema.sh"
  ],
  "editor.accessibilitySupport": "off",
  "git.confirmSync": false,
  "snyk.advanced.cliPath": "/Users/oivindlund/Library/Application Support/snyk/vscode-cli/snyk-macos-arm64",
  "snyk.folderConfigs": [
    {
      "folderPath": "/Users/oivindlund/git_repos/EvilCrowRF-V2",
      "baseBranch": "main",
      "localBranches": [
        "backup/v1.3.3",
        "dev/phase1-core-arch",
        "dev/phase2-protocols",
        "dev/phase3-ui",
        "dev/phase4-testing",
        "main"
      ]
    }
  ],
  "snyk.trustedFolders": [
    "/Users/oivindlund/date-night-app",
    "/Users/oivindlund/git_repos/EvilCrowRF-V2",
    "/Users/oivindlund/Documents/Arduino/libraries",
    "/Users/oivindlund/git_repos/EvilCrow-v2-SDR"
  ],
  "snyk.allIssuesVsNetNewIssues": "All issues",
  "amazonQ.suppressPrompts": {
    "amazonQChatDisclaimer": true,
    "createCredentialsProfile": false,
    "codeWhispererNewWelcomeMessage": false,
    "codeWhispererConnectionExpired": false,
    "amazonQWelcomePage": false,
    "amazonQSessionConfigurationMessage": false,
    "minIdeVersion": false,
    "ssoCacheError": false,
    "amazonQLspManifestMessage": false,
    "amazonQWorkspaceLspManifestMessage": false
  },
  "amazonQ.telemetry": false,
  "amazonQ.allowFeatureDevelopmentToRunCodeAndTests": {},
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "editor.formatOnSave": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "github.copilot.advanced": {},
  "workbench.navigationControl.enabled": false,
  "editor.largeFileOptimizations": false,
  "terminal.integrated.accessibleViewFocusOnCommandExecution": true,
  "terminal.integrated.scrollback": 5000,
  "mcp": {
    "servers": {
      "sequential-thinking": {
        "command": "docker",
        "args": ["run", "--rm", "-i", "mcp/sequentialthinking:latest"]
      },
      "filesystem": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--mount",
          "type=bind,src=/Users/oivindlund/date-night-app/,dst=/Users/oivindlund/date-night-app/",
          "mcp/filesystem",
          "/Users/oivindlund/date-night-app/"
        ]
      },
      "memory": {
        "command": "docker",
        "args": ["run", "-i", "--rm", "-v", "augment-memory:/app/dist", "mcp/memory"],
        "env": {},
        "type": "stdio"
      },
      "date-night-app2 Docs": {
        "type": "sse",
        "url": "https://gitmcp.io/mrkurger/date-night-app2"
      },
      "typescript-lsp": {
        "type": "stdio",
        "command": "npx",
        "args": [
          "/Users/oivindlund/git_repos/lsp-mcp",
          "typescript",
          "/Users/oivindlund/git_repos/lsp-mcp/node_modules/.bin/typescript-language-server",
          "--stdio"
        ]
      },
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "ghcr.io/github/github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "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"
        }
      }
    },
    "inputs": [
      {
        "id": "",
        "type": "promptString",
        "description": "GitHub Personal Access Token",
        "password": true
      },
      {
        "type": "promptString",
        "id": "apiKey",
        "description": "Firecrawl API Key",
        "password": true
      },
      {
        "id": "github_token",
        "type": "promptString",
        "description": "GitHub Personal Access Token",
        "password": true
      }
    ]
  },
  "github.copilot.nextEditSuggestions.fixes": true,
  "github.copilot.chat.languageContext.fix.typescript.enabled": true,
  "github.copilot.chat.generateTests.codeLens": true,
  "github.copilot.chat.languageContext.typescript.enabled": true,
  "github.copilot.chat.search.keywordSuggestions": true,
  "cline.modelSettings.o3Mini.reasoningEffort": "high",
  "cline.vsCodeLmModelSelector": {},
  "zencoder.displayDebugInfo": true,
  "explorer.confirmDelete": false,
  "eslint.nodeEnv": "",
  "eslint.workingDirectories": [],
  "github.copilot.chat.followUps": "always",
  "github.copilot.chat.completionContext.typescript.mode": "on",
  "html.format.indentInnerHtml": true,
  "editor.indentSize": "tabSize",
  "githubPullRequests.fileListLayout": "flat",
  "accessibility.verbosity.terminal": false,
  "editor.codeActionsOnSave": {
    
  },
  "augment.chat.userGuidelines": "Integrated Developer-Focused Memory & Sequential Thinking Instructions\nCore Workflow for Each Interaction\n\nContext Initialization\nAlways begin with \"Remembering...\" and retrieve relevant technical context\nAssume primary developer interaction unless specified otherwise\nPrioritize retrieval of: current projects, technical decisions, known issues, developer preferences, recent progress\nSequential Problem Analysis Framework\nInitial Thought Process:\nEstablish technical domain (firmware, web dev, RF security, etc.) using memory context\nAssess complexity and break down into manageable components\nConsider established patterns and preferences from memory\nStructured Analysis:\n\nRequirements: objectives, constraints, success criteria, architecture fit\nSolution Space: approaches, trade-offs, dependencies, risks\nImplementation: steps, sequence, testing, rollback plans\nCode-Focused Patterns:\n\nData flow tracing → core abstractions → error handling → testing strategy → maintainability\nArchitecture thinking: separation of concerns, interfaces, scalability, performance\n3. Information Categories to Monitor & Store\nTechnical Profile: languages, frameworks, tools, environment setup, coding standards, testing approaches\nProject Context: repositories, architecture, dependencies, team structure, status\nProblem-Solving Patterns: debugging approaches, solutions, error patterns, optimization strategies\nDevelopment Workflow: methodologies, code review, CI/CD, version control practices\n\nProactive Memory Updates During Thinking\nImmediate storage for:\nTechnical Decisions: new technologies, architectural choices, rationale\nProblem Solutions: bugs/issues with solutions, debugging steps, successful methods\nProject Evolution: features, milestones, dependency updates, configuration changes\nKnowledge Growth: new concepts, patterns, techniques, skill development\n5. Iterative Refinement & Revision\nUse revision thinking when:\n\nComplexity exceeds initial assessment\nNew information changes scope\nBetter solutions emerge\nIntegration challenges appear\nRevision indicators: \"Wait, I need to reconsider...\" / \"Actually, there's a better approach...\"\n\nEntity & Relationship Structure\nKey Entities: Projects, Technologies, Issues/Solutions, Code Components, Configurations, Team Members\nImportant Relationships: \"uses\", \"works_on\", \"depends_on\", \"solved_by\", \"prefers\", \"implements\", \"collaborates_with\"\n\nSolution Validation & Documentation\nFinal verification: Does this solve the problem? Constraints satisfied? Testable? Integrates properly? Unintended consequences?\n\nCapture reasoning for: technology choices, architecture decisions, trade-off resolutions, implementation strategies\n\nAdaptive Strategies by Problem Type\nDebugging: symptoms → root cause → verify fix\nFeature Development: requirements → design → implementation → testing\nPerformance: measure → bottlenecks → optimize → validate\nIntegration: interfaces → data flow → implement → test end-to-end\n\nKnowledge Integration\nBefore concluding:\n\nUpdate memory with new technical knowledge, project status, decisions, preferences\nConsider team impact: documentation needs, breaking changes, deployment strategy\nCapture learning: new patterns, mistakes/lessons, successful approaches, resources\nThis integrated approach ensures both memory and sequential thinking work together as a comprehensive technical knowledge system that supports ongoing development, tracks project evolution, and builds developer expertise through structured problem-solving."
}
