name: Generate and Upload Documentation

on:
  push:
    branches: [main, Nebular-UI-Refactor]
    paths:
      - '**/*.js'
      - '**/*.ts'
      - '**/*.html'
      - 'docs/**/*.md'
      - '_docs_index.html'
      - '_glossary.html'
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  generate-docs:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    permissions:
      contents: write  # Required to commit changes to the repository
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      # Use the official Node.js action for reliability
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Use stable LTS version

      # Step 3: Ensure each folder has required HTML docs
      - name: Ensure Required HTML Docs
        run: node scripts/generate_docs.js --verbose

      # Step 4: Parse source code to update glossaries
      - name: Update Glossaries
        run: node scripts/generate_docs.js --update-only --verbose

      # Step 5: Rebuild documentation indexes
      - name: Rebuild Documentation Indexes
        run: node scripts/generate_docs.js --migrate-docs --verbose

      # Step 6: Commit changes back to repository
      - name: Commit Changes
        if: github.event_name != 'pull_request'  # Only commit on non-PR events
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "**/*.html"
          git diff --quiet && git diff --staged --quiet || git commit -m "Update documentation [skip ci]"
          git push

  upload-docs:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    needs: generate-docs  # Run only after generate-docs job completes
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      # Use the official Node.js action for reliability
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Use stable LTS version

      # Step 3: Build Documentation
      # Run the build process to generate final documentation files
      - name: Build Documentation
        run: |
          cd docs
          npm ci  # Clean install dependencies
          npm run build  # Build the documentation

      # Step 4: Upload Documentation as an Artifact
      - name: Upload Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-${{ github.run_id }}  # Include run ID for traceability
          path: docs/build  # Path to the built documentation
          retention-days: 14  # Retain the artifact for 14 days
