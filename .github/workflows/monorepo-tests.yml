name: Monorepo Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
      - 'server/**'
      - '.github/scripts/**'
      - '.github/workflows/**'
      - '.github/workflows/monorepo-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
      - 'server/**'
      - '.github/scripts/**'
      - '.github/workflows/**'
      - '.github/workflows/monorepo-tests.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # Weekly system tests

permissions:
  contents: read
  checks: write
  pull-requests: write
  issues: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  angular-tests:
    name: Angular Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        node-version: [20.x, 18.x]
    env:
      CI: true
      HUSKY: 0
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: |
          cd ./client-angular
          npm ci || npm install
          npm install yargs --save-dev
      - name: Setup Chrome Browser
        uses: browser-actions/setup-chrome@v1
      - name: Run Unit Tests
        working-directory: ./client-angular
        run: npm test -- --watch=false --browsers=ChromeHeadless --no-progress || echo "Tests failed"
      - name: Prepare Test Results Directory
        run: |
          mkdir -p downloaded-reports/angular
          cp -r ./client-angular/coverage/* downloaded-reports/angular/ || true
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: angular-test-results
          path: |
            ./client-angular/coverage
            downloaded-reports/angular
          if-no-files-found: ignore
      - name: Run ESLint
        working-directory: ./client-angular
        run: npx ng lint client-angular

  angular-e2e:
    name: Angular E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: angular-tests
    strategy:
      matrix:
        node-version: [20.x, 18.x]
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: |
          cd ./client-angular
          npm ci || npm install
      - name: Start Angular App
        working-directory: ./client-angular
        run: npm start -- --host=0.0.0.0 --port=4200 &
      - name: Wait for App to Start
        run: curl -I http://localhost:4200
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client-angular
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:4200'
          browser: chrome
      - name: Prepare Cypress Screenshots Directory
        if: failure()
        run: |
          mkdir -p downloaded-reports/angular/cypress-screenshots
          cp -r ./client-angular/cypress/screenshots/* downloaded-reports/angular/cypress-screenshots/ || true
      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: |
            ./client-angular/cypress/screenshots
            downloaded-reports/angular/cypress-screenshots
          if-no-files-found: warn

  server-tests:
    name: Server Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: '22.x'
          working-directory: server
      - name: Wait for MongoDB
        run: |
          for i in {1..10}; do
            if nc -z localhost 27017; then
              echo "MongoDB is up!"
              exit 0
            fi
            echo "Waiting for MongoDB to start..."
            sleep 5
          done
          echo "MongoDB failed to start."
          exit 1
      - name: Run Tests
        run: npm test
        working-directory: server
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test
      - name: Run NPM Audit
        run: npm audit --audit-level=high
        working-directory: server
      - name: Run ESLint
        run: npx eslint .
        working-directory: ./server
      - name: Run TypeScript Compiler
        run: npx tsc --noEmit
        working-directory: ./server

  workflow-scripts-tests:
    name: Workflow Scripts Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      ARTIFACTS_RETENTION: 14
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Dependencies
        run: |
          cd .github/scripts
          npm ci
      - name: Run Workflow Tests
        run: |
          cd .github/scripts
          node test-workflows.js
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: workflow-test-results
          path: .github/scripts/workflow-test-report.txt
          retention-days: ${{ env.ARTIFACTS_RETENTION }}
