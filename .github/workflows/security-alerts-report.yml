name: Security Alerts Report (Alternative)

on:
  schedule:
    - cron: '0 0 * * 1' # Run weekly on Monday
  workflow_dispatch: # Allow manual triggering

# Prevent multiple instances from running concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30 # Add timeout to prevent runaway jobs

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: '22'

      - name: Install security tools
        run: npm install --save-dev npm-audit-html npm-check

      - name: Check Client Dependencies
        id: check-client
        continue-on-error: true
        run: |
          if [ -d "client-angular" ]; then
            cd client-angular
            echo "## Client Dependencies" > ../client-deps-report.md
            echo "" >> ../client-deps-report.md
            npx npm-check --production --markdown >> ../client-deps-report.md || echo "Error running npm-check for client"
            npm audit --json | npx npm-audit-html --output ../client-audit.html || echo "Error running npm audit for client"
            cd ..
          else
            echo "Client directory not found, skipping"
          fi

      - name: Check Server Dependencies
        id: check-server
        continue-on-error: true
        run: |
          if [ -d "server" ]; then
            cd server
            echo "## Server Dependencies" > ../server-deps-report.md
            echo "" >> ../server-deps-report.md
            npx npm-check --production --markdown >> ../server-deps-report.md || echo "Error running npm-check for server"
            npm audit --json | npx npm-audit-html --output ../server-audit.html || echo "Error running npm audit for server"
            cd ..
          else
            echo "Server directory not found, skipping"
          fi

      - name: Generate Combined Report
        run: |
          mkdir -p downloaded-reports/security downloaded-reports/security/html-reports

          # Create report header
          cat > downloaded-reports/security/dependabot-alerts.md << EOL
          # Security Alerts and Dependency Report

          *Generated on: $(date +%Y-%m-%d)*

          This report provides an overview of dependencies and potential security issues in the project.

          EOL

          # Add client dependencies report if it exists
          if [ -f "client-deps-report.md" ]; then
            cat client-deps-report.md >> downloaded-reports/security/dependabot-alerts.md
            echo "" >> downloaded-reports/security/dependabot-alerts.md
          fi

          # Add server dependencies report if it exists
          if [ -f "server-deps-report.md" ]; then
            cat server-deps-report.md >> downloaded-reports/security/dependabot-alerts.md
            echo "" >> downloaded-reports/security/dependabot-alerts.md
          fi

          # Create security audit section
          cat >> downloaded-reports/security/dependabot-alerts.md << EOL

          ## Security Audit Results

          Detailed HTML reports have been generated for:

          EOL

          # Add links to HTML reports if they exist
          if [ -f "client-audit.html" ]; then
            cp client-audit.html downloaded-reports/security/html-reports/
            echo "- [Client Security Audit](./html-reports/client-audit.html)" >> downloaded-reports/security/dependabot-alerts.md
          fi

          if [ -f "server-audit.html" ]; then
            cp server-audit.html downloaded-reports/security/html-reports/
            echo "- [Server Security Audit](./html-reports/server-audit.html)" >> downloaded-reports/security/dependabot-alerts.md
          fi

          # Add manual check instructions
          cat >> downloaded-reports/security/dependabot-alerts.md << EOL

          ## Manual Security Checks

          For a complete security assessment, please also check:

          1. GitHub Security tab for Dependabot alerts
          2. npm audit reports for each package
          3. Known vulnerabilities in third-party libraries

          EOL

      - name: Commit Report
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Handle any unstaged changes by stashing them
          git stash -u || true

          # Pull the latest changes with rebase strategy to avoid merge commits
          git pull --rebase origin main

          # Pop the stash if we stashed anything
          git stash list | grep -q "stash@{0}" && git stash pop || true

          # Add only the security report files
          git add downloaded-reports/security/dependabot-alerts.md
          git add downloaded-reports/security/html-reports/ || true

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: update security alerts report [skip ci]"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
