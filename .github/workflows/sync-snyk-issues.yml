name: Sync Snyk Security Issues

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight
  workflow_dispatch: # Allow manual triggering

# Prevent multiple instances from running concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write       # For committing sync results
  security-events: write # For submitting security analysis
  issues: write        # For creating/updating issues
  pull-requests: write # For creating security fix PRs
  actions: read       # For checking build status

jobs:
  sync-snyk-issues:
    runs-on: ubuntu-latest
    timeout-minutes: 45 # Add timeout to prevent runaway jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: '22'
          safe-install: 'true'
          update-lockfile: 'false'
          check-missing: 'true'

      - name: Cache Snyk CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-snyk-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-snyk-

      - name: Install Snyk
        run: npm install --save-dev snyk

      - name: Verify Snyk token
        run: |
          if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "::error::SNYK_TOKEN is not set. Please add it to your repository secrets."
            exit 1
          fi

      - name: Authenticate with Snyk
        run: npx snyk auth ${{ secrets.SNYK_TOKEN }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Create reports directory
        run: mkdir -p downloaded-reports/snyk

      # Standard vulnerability tests for individual projects
      - name: Scan root project
        run: npx snyk test --json > snyk-root-results.json || true

      - name: Scan server project
        run: cd server && npx snyk test --json > ../snyk-server-results.json || true

      - name: Scan client project
        run: cd client-angular && npx snyk test --json > ../snyk-client-results.json || true

      # Generate optimized dependency trees (with depth limit to reduce file size)
      - name: Generate dependency tree for root
        run: npm ls --json --depth=2 > npm-root-deps-tree.json || true

      - name: Generate dependency tree for server
        run: cd server && npm ls --json --depth=2 > ../npm-server-deps-tree.json || true

      - name: Generate dependency tree for client
        run: cd client-angular && npm ls --json --depth=2 > ../npm-client-deps-tree.json || true

      # Get upgrade recommendations
      - name: Get upgrade recommendations for root
        run: npx snyk test --json --dev --severity-threshold=low --print-deps > snyk-root-upgrade-paths.json || true

      - name: Get upgrade recommendations for server
        run: cd server && npx snyk test --json --dev --severity-threshold=low --print-deps > ../snyk-server-upgrade-paths.json || true

      - name: Get upgrade recommendations for client
        run: cd client-angular && npx snyk test --json --dev --severity-threshold=low --print-deps > ../snyk-client-upgrade-paths.json || true

      # Generate reports
      - name: Generate prioritized task list
        run: |
          node .github/scripts/generate-snyk-task-list.js

      # Generate HTML report for documentation
      - name: Generate HTML report
        run: |
          cat > downloaded-reports/snyk/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Snyk Security Report</title>
            <link rel="stylesheet" href="/docs/component-library/styles/style.css">
          </head>
          <body>
            <header>
              <div class="container">
                <h1>Date Night App Documentation</h1>
                <nav>
                  <ul>
                    <li><a href="/_docs_index.html">Home</a></li>
                    <li><a href="/_glossary.html">Glossary</a></li>
                  </ul>
                </nav>
              </div>
            </header>
            
            <main class="container">
              <h1>Snyk Security Report</h1>
              <p>Last updated: $(date)</p>
              
              <h2>Security Vulnerabilities</h2>
              <p>This report is automatically generated by the Snyk security scanning workflow.</p>
              
              <div id="report-content">
                <!-- Report content will be inserted here by the generate-snyk-task-list.js script -->
                <p>Loading report content...</p>
              </div>
            </main>
            
            <footer>
              <div class="container">
                <p>&copy; 2025 Date Night App. All rights reserved.</p>
              </div>
            </footer>
          </body>
          </html>
          EOL

      # Upload JSON files as artifacts instead of committing them
      - name: Upload Snyk JSON results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snyk-json-results-${{ github.run_id }}
          path: |
            snyk-*.json
            npm-*.json
          retention-days: 7
          if-no-files-found: warn

      # Clean up JSON files to avoid committing them
      - name: Remove JSON files
        run: |
          # Remove all JSON files after they've been uploaded as artifacts
          rm -f snyk-*.json npm-*.json

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push changes
        run: |
          # Handle any unstaged changes by stashing them
          git stash -u || true

          # Pull the latest changes with rebase strategy to avoid merge conflicts
          git pull --rebase origin main || true

          # Pop the stash if we stashed anything
          git stash list | grep -q "stash@{0}" && git stash pop || true

          # Add only the Snyk report files
          git add downloaded-reports/snyk/

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: update Snyk issues task list [skip ci]"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Create a deprecation notice for the old workflow file
      - name: Create deprecation notice for docs-generation-and-deployment.yml
        run: |
          if [ -f ".github/workflows/docs-generation-and-deployment.yml" ]; then
            echo "Creating deprecation notice for docs-generation-and-deployment.yml"
            cat > .github/workflows/DEPRECATED-docs-generation-and-deployment.yml << 'EOL'
          name: DEPRECATED - Documentation Generation and Deployment
          
          # This workflow is deprecated and has been replaced by generate-docs.yml
          # Please use generate-docs.yml instead.
          
          on:
            workflow_dispatch:
          
          jobs:
            notify:
              runs-on: ubuntu-latest
              steps:
                - name: Notify about deprecation
                  run: |
                    echo "This workflow is deprecated. Please use generate-docs.yml instead."
                    exit 1
          EOL
            
            # Remove the old workflow file
            git rm .github/workflows/docs-generation-and-deployment.yml
            
            # Commit the changes
            git add .github/workflows/DEPRECATED-docs-generation-and-deployment.yml
            git commit -m "chore: deprecate old docs workflow [skip ci]"
            git push
          fi
