name: Trivy Security Scan

on:
  push:
    branches:
      - "**" # Triggers on any branch where commits are pushed

permissions:
  contents: read
  security-events: write  # For uploading security scan results
  issues: write         # For creating security issues
  checks: write        # For creating check runs
  pull-requests: write # For commenting on PRs

jobs:
  trivy-scan:
    name: Run Trivy Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the branch where the commit was made
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Target only the branch that triggered this workflow
          ref: ${{ github.ref }}

      # Step 2: Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'  # Don't fail the build on vulnerabilities

      # Step 3: Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      # Step 4: Scan for secrets in the codebase
      - name: Scan for Secrets
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          scanners: 'secret'
          format: 'table'
          exit-code: '0'  # Don't fail the build on secrets

      # Step 5: Scan dependencies for vulnerabilities
      - name: Scan Dependencies
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          scanners: 'vuln'
          format: 'table'
          exit-code: '0'  # Don't fail the build on vulnerabilities