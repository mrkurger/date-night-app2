name: Angular Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
      - '.github/workflows/angular-tests.yml' # Trigger on workflow changes too
  pull_request:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
      - '.github/workflows/angular-tests.yml' # Trigger on workflow changes too
  workflow_dispatch: # Allow manual triggering

# Prevent multiple instances from running concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 20 # Add timeout to prevent runaway jobs

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: ${{ matrix.node-version }}
          safe-install: 'true'
          update-lockfile: 'false'
          check-missing: 'true'

      - name: Cache Angular dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./client-angular/node_modules
            ~/.npm
          key: ${{ runner.os }}-angular-${{ hashFiles('./client-angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-angular-

      - name: Verify Angular dependencies
        working-directory: ./client-angular
        run: |
          echo "Checking package.json and lockfile consistency..."
          
          # Check if package-lock.json is valid JSON
          if ! jq empty package-lock.json 2>/dev/null; then
            echo "Warning: package-lock.json is not valid JSON. Will regenerate it."
            rm -f package-lock.json
            npm install --package-lock-only
          fi
          
          # Check for dependency mismatches
          MISMATCHES=$(npm ls 2>&1 | grep -i "UNMET DEPENDENCY\|invalid\|missing" || true)
          if [ -n "$MISMATCHES" ]; then
            echo "Found dependency mismatches:"
            echo "$MISMATCHES"
            echo "Attempting to fix..."
            npm install --no-audit
          fi

      - name: Ensure specific dependencies are installed
        run: |
          cd ./client-angular
          npm list angularx-qrcode || npm install angularx-qrcode@19.0.0
          npm list @swimlane/ngx-charts || npm install @swimlane/ngx-charts@22.0.0-alpha.1
          npm list chart.js || npm install chart.js@4.4.9

      - name: Run unit tests
        working-directory: ./client-angular
        run: npm test -- --watch=false --browsers=ChromeHeadless --no-progress

      - name: Prepare test results directory
        run: |
          mkdir -p downloaded-reports/angular
          cp -r ./client-angular/coverage/* downloaded-reports/angular/ || true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: angular-test-results
          path: downloaded-reports/angular
          retention-days: 14
          if-no-files-found: warn

  e2e:
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 30 # Add timeout to prevent runaway jobs

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: ${{ matrix.node-version }}
          safe-install: 'true'
          update-lockfile: 'false'
          check-missing: 'true'

      - name: Cache Angular dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./client-angular/node_modules
            ~/.npm
          key: ${{ runner.os }}-angular-${{ hashFiles('./client-angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-angular-

      - name: Verify Angular dependencies
        working-directory: ./client-angular
        run: |
          echo "Checking package.json and lockfile consistency..."
          
          # Check if package-lock.json is valid JSON
          if ! jq empty package-lock.json 2>/dev/null; then
            echo "Warning: package-lock.json is not valid JSON. Will regenerate it."
            rm -f package-lock.json
            npm install --package-lock-only
          fi
          
          # Check for dependency mismatches
          MISMATCHES=$(npm ls 2>&1 | grep -i "UNMET DEPENDENCY\|invalid\|missing" || true)
          if [ -n "$MISMATCHES" ]; then
            echo "Found dependency mismatches:"
            echo "$MISMATCHES"
            echo "Attempting to fix..."
            npm install --no-audit
          fi

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client-angular
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:4200'
          browser: chrome
          record: false # Set to true if you have Cypress Dashboard

      - name: Prepare Cypress results directory
        if: ${{ always() }}
        run: |
          mkdir -p downloaded-reports/angular/cypress
          
          # Copy screenshots if they exist
          if [ -d "./client-angular/cypress/screenshots" ]; then
            mkdir -p downloaded-reports/angular/cypress/screenshots
            cp -r ./client-angular/cypress/screenshots/* downloaded-reports/angular/cypress/screenshots/ || true
          fi
          
          # Copy videos if they exist
          if [ -d "./client-angular/cypress/videos" ]; then
            mkdir -p downloaded-reports/angular/cypress/videos
            cp -r ./client-angular/cypress/videos/* downloaded-reports/angular/cypress/videos/ || true
          fi

      - name: Upload Cypress results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: cypress-results
          path: downloaded-reports/angular/cypress
          retention-days: 14
          if-no-files-found: warn

  lint:
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 10 # Add timeout to prevent runaway jobs

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-nodejs
        with:
          node-version: ${{ matrix.node-version }}
          safe-install: 'true'
          update-lockfile: 'false'
          check-missing: 'true'

      - name: Cache Angular dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./client-angular/node_modules
            ~/.npm
          key: ${{ runner.os }}-angular-${{ hashFiles('./client-angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-angular-

      - name: Verify Angular dependencies
        working-directory: ./client-angular
        run: |
          echo "Checking package.json and lockfile consistency..."
          
          # Check if package-lock.json is valid JSON
          if ! jq empty package-lock.json 2>/dev/null; then
            echo "Warning: package-lock.json is not valid JSON. Will regenerate it."
            rm -f package-lock.json
            npm install --package-lock-only
          fi
          
          # Check for dependency mismatches
          MISMATCHES=$(npm ls 2>&1 | grep -i "UNMET DEPENDENCY\|invalid\|missing" || true)
          if [ -n "$MISMATCHES" ]; then
            echo "Found dependency mismatches:"
            echo "$MISMATCHES"
            echo "Attempting to fix..."
            npm install --no-audit
          fi

      - name: Run ESLint
        working-directory: ./client-angular
        run: npx ng lint client-angular
        # continue-on-error: true # <-- REMOVED: Lint errors will now fail the workflow
        
      - name: Generate lint report
        if: ${{ failure() }}
        working-directory: ./client-angular
        run: |
          mkdir -p ../downloaded-reports/angular/lint
          npx ng lint client-angular --format json > ../downloaded-reports/angular/lint/eslint-report.json || true
          
      - name: Upload lint report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: downloaded-reports/angular/lint
          retention-days: 14
          if-no-files-found: warn