name: Angular Tests

on:
  push:
    branches: [main, develop, Nebular-UI-Refactor]
    paths:
      - 'client-angular/**'  # Trigger workflow for changes in Angular client
      - '.github/workflows/angular-tests.yml'  # Trigger workflow changes
  pull_request:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
      - '.github/workflows/angular-tests.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write       # For reporting test results
  pull-requests: write # For updating PR with test results
  issues: write      # For creating issues on test failures

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: true
      HUSKY: 0  # Disable Husky git hooks in CI
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [20.x, 18.x]

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v4

      # Setup the Node.js environment, using a matrix for different Node versions
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install dependencies (ci = clean install), also ensures yargs is available for scripts
      - name: Install Dependencies
        run: |
          cd ./client-angular
          npm ci
          npm install yargs --save-dev

      # Setup Chrome browser for headless test execution
      - name: Setup Chrome Browser
        uses: browser-actions/setup-chrome@v1

      # Run Angular unit tests in headless Chrome, do not fail workflow if tests fail (for artifact upload)
      - name: Run Unit Tests
        working-directory: ./client-angular
        run: npm test -- --watch=false --browsers=ChromeHeadless --no-progress || echo "Tests failed"

      # Prepare directory for test results and copy Angular coverage output for upload
      - name: Prepare Test Results Directory
        run: |
          mkdir -p downloaded-reports/angular
          cp -r ./client-angular/coverage/* downloaded-reports/angular/ || true

      # Upload test results as workflow artifacts (for later inspection)
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            ./client-angular/coverage
            downloaded-reports/angular
          if-no-files-found: ignore

  e2e:
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.x, 18.x]

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v4

      # Setup the Node.js environment for E2E job
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install all dependencies before starting the dev server to ensure all tools (like concurrently) are available
      - name: Install Dependencies for E2E
        run: |
          cd ./client-angular
          npm ci

      # Start Angular app; --host and --port allow for external connections (needed for Cypress)
      - name: Start Angular App
        working-directory: ./client-angular
        run: npm start -- --host=0.0.0.0 --port=4200

      # Verify that the Angular server is running before running Cypress tests
      - name: Verify App is Running
        run: curl -I http://localhost:4200

      # Run Cypress E2E tests using the official Cypress GitHub Action
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client-angular
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:4200'
          browser: chrome

      # Prepare directory and copy Cypress screenshots only if tests fail
      - name: Prepare Cypress Screenshots Directory
        if: failure()
        run: |
          mkdir -p downloaded-reports/angular/cypress-screenshots
          cp -r ./client-angular/cypress/screenshots/* downloaded-reports/angular/cypress-screenshots/ || true

      # Upload Cypress screenshots as workflow artifacts if tests fail
      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: |
            ./client-angular/cypress/screenshots
            downloaded-reports/angular/cypress-screenshots
          if-no-files-found: warn

  lint:
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [20.x, 18.x]

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v4

      # Setup the Node.js environment for lint job
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install dependencies required for linting
      - name: Install Dependencies for Linting
        run: |
          cd ./client-angular
          npm ci

      # Run ESLint to check code quality and style
      - name: Run ESLint
        working-directory: ./client-angular
        run: npx ng lint client-angular