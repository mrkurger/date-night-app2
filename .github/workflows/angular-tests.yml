name: Angular Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'client-angular/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'client-angular/**'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: true

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'client-angular/package-lock.json'

      - name: Install dependencies
        working-directory: ./client-angular
        run: npm ci

      - name: Run unit tests
        working-directory: ./client-angular
        run: npm test -- --watch=false --browsers=ChromeHeadless --no-progress

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ./client-angular/coverage

  e2e:
    runs-on: ubuntu-latest
    env:
      CI: true

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'client-angular/package-lock.json'

      - name: Install dependencies
        working-directory: ./client-angular
        run: npm ci

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client-angular
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:4200'
          browser: chrome
          headless: true

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./client-angular/cypress/screenshots

  lint:
    runs-on: ubuntu-latest
    env:
      CI: true

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'client-angular/package-lock.json'

      - name: Install dependencies
        working-directory: ./client-angular
        run: npm ci

      - name: Run ESLint
        working-directory: ./client-angular
        run: npx ng lint client-angular
        continue-on-error: true
